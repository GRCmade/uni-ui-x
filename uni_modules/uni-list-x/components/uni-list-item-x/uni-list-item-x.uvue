<template>
	<view :class="{ 'uni-list-item--disabled': disabled }"
		:hover-class="(!clickable && !(link == '')) || disabled || showSwitch ? '' : 'uni-list-item--hover'"
		class="uni-list-item" @click="onClick">
		<view v-if="!isFirstChild" :class="{ 'uni-list--border': border }"></view>
		<view class="uni-list-item__container"
			:class="{ 'container--right': showArrow || link=='', 'flex--direction': direction === 'column'}">
			<view class="uni-list-item__header">
				<view v-if="thumb" class="uni-list-item__icon">
					<image :src="thumb" class="uni-list-item__icon-img" :class="['uni-list--' + thumbSize]" />
				</view>
				<view v-else-if="showExtraIcon" class="uni-list-item__icon">
					<uni-icons-x :color="extraIcon.color" :size="extraIcon.size" :type="extraIcon.type" />
				</view>
				<slot name="header"></slot>
			</view>
			<view class="uni-list-item__content"
				:class="{ 'uni-list-item__content--center': thumb=='' || showExtraIcon || showBadge || showSwitch }">
				<slot name="body">
					<text v-if="title" class="uni-list-item__content-title"
						:class="[ellipsis == 1 ? 'uni-ellipsis-' + ellipsis : '']">{{ title }}</text>
					<text v-if="note" class="uni-list-item__content-note">{{ note }}</text>
				</slot>
			</view>
			<view v-if="rightText !== '' || showBadge || showSwitch" class="uni-list-item__extra"
				:class="{ 'flex--justify': direction === 'column' }">
				<text v-if="rightText  !== ''" class="uni-list-item__extra-text">{{ rightText }}</text>
				<!-- <uni-badge v-if="showBadge" :type="badgeType" :text="badgeText" :custom-style="badgeStyle" /> -->
				<switch v-if="showSwitch" :disabled="disabled" :checked="switchChecked" @change="onSwitchChange" />
			</view>
			<slot name="footer"></slot>
		</view>
		<uni-icons-x v-if="showArrow" :size="16" class="uni-icon-wrapper" color="#bbb" type="right" />
	</view>
</template>

<script>
	import { UniListItemXExtraIcon } from '@/uni_modules/uni-types-x/types/UniListX.uts';
	/**
	 * ListItem 列表子组件
	 * @description 列表子组件
	 * @tutorial https://ext.dcloud.net.cn/plugin?id=24
	 * @property {String} 	title 							标题
	 * @property {String} 	note 							描述
	 * @property {String} 	thumb 							左侧缩略图，若thumb有值，则不会显示扩展图标
	 * @property {String}  	thumbSize {String}略缩图大小 lg|base|sm
	 *	@value 	 lg			大图
	 *	@value 	 base		一般
	 *	@value 	 sm			小图
	 * @property {String} 	badgeText						数字角标内容
	 * @property {String} 	badgeType 						数字角标类型，参考[uni-icons](https://ext.dcloud.net.cn/plugin?id=21)
	 * @property {Object}   badgeStyle           数字角标样式
	 * @property {String} 	rightText 						右侧文字内容
	 * @property {Boolean} 	disabled = [true|false]			是否禁用
	 * @property {Boolean} 	clickable = [true|false] 		是否开启点击反馈
	 * @property {String} 	link = [navigateTo|redirectTo|reLaunch|switchTab] 是否展示右侧箭头并开启点击反馈
	 *  @value 	navigateTo 	同 uni.navigateTo()
	 * 	@value redirectTo 	同 uni.redirectTo()
	 * 	@value reLaunch   	同 uni.reLaunch()
	 * 	@value switchTab  	同 uni.switchTab()
	 * @property {String | PageURIString} 	to  			跳转目标页面
	 * @property {Boolean} 	showBadge = [true|false] 		是否显示数字角标
	 * @property {Boolean} 	showSwitch = [true|false] 		是否显示Switch
	 * @property {Boolean} 	switchChecked = [true|false] 	Switch是否被选中
	 * @property {Boolean} 	showExtraIcon = [true|false] 	左侧是否显示扩展图标
	 * @property {Object}	extraIcon	{UListItemXExtraIcon}扩展图标参数，格式为 {color: '#4cd964',size: '22',type: 'spinner'}
	 * @property {String} 	direction = [row|column]		排版方向
	 * @value row 			水平排列
	 * @value column 		垂直排列
	 * @event {Function} 	click 							点击 uniListItem 触发事件
	 * @event {Function} 	switchChange 					点击切换 Switch 时触发
	 */
	export default {
		name: 'UniListItemX',
		emits: ['click', 'switchChange'],
		props: {
			direction: {
				type: String,
				default: 'row'
			},
			title: {
				type: String,
				default: ''
			},
			note: {
				type: String,
				default: ''
			},
			ellipsis: {
				type: Number,
				default: 0
			},
			disabled: {
				type: Boolean,
				default: false
			},
			clickable: {
				type: Boolean,
				default: false
			},
			showArrow: {
				type: Boolean,
				default: false
			},
			link: {
				type: String,
				default: 'navigateTo'
			},
			to: {
				type: String,
				default: ''
			},
			showBadge: {
				type: Boolean,
				default: false
			},
			showSwitch: {
				type: Boolean,
				default: false
			},
			switchChecked: {
				type: Boolean,
				default: false
			},
			badgeText: {
				type: String,
				default: ''
			},
			badgeType: {
				type: String,
				default: 'success'
			},
			// badgeStyle: {
			// 	type: Object,
			// 	default() {
			// 		return {}
			// 	}
			// },
			rightText: {
				type: String,
				default: ''
			},
			thumb: {
				type: String,
				default: ''
			},
			thumbSize: {
				type: String,
				default: 'base'
			},
			showExtraIcon: {
				type: Boolean,
				default: false
			},
			extraIcon: {
				type: Object as PropType<UniListItemXExtraIcon>,
				default: () : UniListItemXExtraIcon => ({
					color: '#000',
					type: "list",
					size: 16
				} as UniListItemXExtraIcon)
			},
			border: {
				type: Boolean,
				default: true
			}
		},
		computed: {
			// _extraIcon() : UniListItemXExtraIcon {
			// 	if(this.extraIcon instanceof UniListItemXExtraIcon){
			// 		return this.extraIcon
			// 	}
			// 	return JSON.parse<UniListItemXExtraIcon>(JSON.stringify(this.extraIcon)) as UniListItemXExtraIcon
			// },
		},
		watch: {
		},
		// inject: ['list'],
		data() {
			return {
				isFirstChild: false
			};
		},
		mounted() {
			// 判断是否存在 uni-list 组件
			this.getForm('uniListx')
		},
		methods: {
			/**
			 * 获取父元素实例
			 */
			getForm(name : string) : void {
				let parent = this.$parent;
				let parentName = parent?.$options.name;
				let bool = true
				while (parentName !== name && bool) {
					parent = parent?.$parent;
					parentName = parent?.$options.name;
					if (parent == null) bool = false
				}
				// #ifndef APP-ANDROID
				if (bool) {
					if (parent?.firstChildAppend === false) {
						parent.firstChildAppend = true;
						this.isFirstChild = true;
					}
				}
				// #endif
			},
			onClick() {
				if (this.to !== '') {
					this.openPage();
					return;
				}
				if (this.clickable) {
					this.$emit('click', {
						data: {}
					});
				}
			},
			onSwitchChange(e : UniSwitchChangeEvent) {
				this.$emit('switchChange', e.detail);
			},
			openPage() : void {
				const index = ['navigateTo', 'redirectTo', 'reLaunch', 'switchTab'].indexOf(this.link)
				if (index != -1) {
					this.pageApi(this.link);
				} else {
					this.pageApi('navigateTo');
				}
			},
			pageApi(api : string) : void {
				// TODO https://yuhespace.youtrack.cloud/issue/uix-9/uniappx
				switch (api) {
					case 'navigateTo':
						uni.navigateTo({
							url: this.to,
							success: (res : any) => {
								this.$emit('click', res);
							},
							fail: (err : any) => {
								this.$emit('click', err);
							}
						});
						break;
					case 'redirectTo':
						uni.redirectTo({
							url: this.to,
							success: (res : any) => {
								this.$emit('click', res);
							},
							fail: (err : any) => {
								this.$emit('click', err);
							}
						});
						break;
					case 'reLaunch':
						uni.reLaunch({
							url: this.to,
							success: (res : any) => {
								this.$emit('click', res);
							},
							fail: (err : any) => {
								this.$emit('click', err);
							}
						});
						break;
					case 'switchTab':
						uni.switchTab({
							url: this.to,
							success: (res : any) => {
								this.$emit('click', res);
							},
							fail: (err : any) => {
								this.$emit('click', err);
							}
						});
						break;
					default:
						uni.navigateTo({
							url: this.to,
							success: (res : any) => {
								this.$emit('click', res);
							},
							fail: (err : any) => {
								this.$emit('click', err);
							}
						});
				}
			}
		}
	};
</script>

<style lang="scss">
	$uni-font-size-sm: 12px;
	$uni-font-size-base: 14px;
	$uni-font-size-lg: 16px;
	$uni-spacing-col-lg: 12px;
	$uni-spacing-row-lg: 15px;
	$uni-img-size-sm: 20px;
	$uni-img-size-base: 26px;
	$uni-img-size-lg: 40px;
	$uni-border-color: #e5e5e5;
	$uni-bg-color-hover: #f1f1f1;
	$uni-text-color-grey: #999;
	$list-item-pd: $uni-spacing-col-lg $uni-spacing-row-lg;

	.uni-list-item {
		display: flex;
		// font-size: $uni-font-size-lg;
		position: relative;
		justify-content: space-between;
		// align-items: center;
		background-color: #fff;
		flex-direction: row;
		/* #ifdef H5 */
		cursor: pointer;
		/* #endif */
	}

	.uni-list-item--disabled {
		opacity: 0.3;
	}

	.uni-list-item--hover {
		background-color: $uni-bg-color-hover;
	}

	.uni-list-item__container {
		position: relative;
		display: flex;
		flex-direction: row;
		// padding: $list-item-pd;
		// padding-left: $uni-spacing-row-lg;
		flex: 1;
		overflow: hidden;
		// align-items: center;
	}

	.container--right {
		padding-right: 0;
	}

	.uni-list--border {
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		height: 1px;
		transform: scaleY(0.5);
		background-color: $uni-border-color;
	}

	// .uni-list--border:after {
	// 	position: absolute;
	// 	top: 0;
	// 	right: 0;
	// 	left: 0;
	// 	height: 1px;
	// 	content: '';
	// 	-webkit-transform: scaleY(0.5);
	// 	transform: scaleY(0.5);
	// 	background-color: $uni-border-color;
	// }

	.uni-list-item__content {
		display: flex;
		padding: $list-item-pd;
		padding-left: $uni-spacing-row-lg;
		flex: 1;
		// color: #3b4144;
		overflow: hidden;
		flex-direction: column;
		justify-content: space-between;
		overflow: hidden;
	}

	.uni-list-item__content--center {
		justify-content: center;
	}

	.uni-list-item__content-title {
		font-size: $uni-font-size-base;
		color: #3b4144;
		overflow: hidden;
	}

	.uni-list-item__content-note {
		margin-top: 6rpx;
		color: $uni-text-color-grey;
		font-size: $uni-font-size-sm;
		overflow: hidden;
	}

	.uni-list-item__extra {
		// width: 25%;
		display: flex;
		flex-direction: row;
		justify-content: flex-end;
		// align-items: center;
	}

	.uni-list-item__header {
		display: flex;
		justify-content: center;
		// align-items: center;
	}

	.uni-list-item__icon {
		margin-left: 15px;
	}

	.uni-list-item__icon-img {
		height: $uni-img-size-base;
		width: $uni-img-size-base;
		// margin-right: 8px;
	}

	.uni-icon-wrapper {
		display: flex;
		// align-items: center;
		padding: 0 10px;
	}

	.flex--direction {
		flex-direction: column;
		// align-items: initial;
	}

	.flex--justify {
		// justify-content: initial;
	}

	.uni-list--lg {
		height: $uni-img-size-lg;
		width: $uni-img-size-lg;
	}

	.uni-list--base {
		height: $uni-img-size-base;
		width: $uni-img-size-base;
	}

	.uni-list--sm {
		height: $uni-img-size-sm;
		width: $uni-img-size-sm;
	}

	.uni-list-item__extra-text {
		color: $uni-text-color-grey;
		font-size: $uni-font-size-sm;
	}

	.uni-ellipsis-1 {
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
	}

	.uni-ellipsis-2 {
		overflow: hidden;
		text-overflow: ellipsis;
		// display: -webkit-box;
		// -webkit-line-clamp: 2;
		// -webkit-box-orient: vertical;
	}
</style>